[{"path":"http://docs.noclocks.dev/cspr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jimmy Briggs. Author, maintainer. Patrick Howard. Author, reviewer. Clocks, LLC. Copyright holder, funder.","code":""},{"path":"http://docs.noclocks.dev/cspr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Briggs J, Howard P (2025). cspr: Package (One Line, Title Case). R package version 0.0.0.9000, https://github.com/noclocks/cspr, http://docs.noclocks.dev/cspr/.","code":"@Manual{,   title = {cspr: What the Package Does (One Line, Title Case)},   author = {Jimmy Briggs and Patrick Howard},   year = {2025},   note = {R package version 0.0.0.9000, https://github.com/noclocks/cspr},   url = {http://docs.noclocks.dev/cspr/}, }"},{"path":[]},{"path":"http://docs.noclocks.dev/cspr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Charles Street Partners R Package","text":"package designed provide tools functions data analysis, visualization, reporting tailored needs Charles Street Partners. includes structured outputs, prompt templates, custom tools processing real-estate property owner company data augmenting traditional API driven data retrieval custom, agentic AI interactions. package includes variety agentic features: Chats (Agents) - see R/chat.R Prompts - see R/prompts.R inst/prompts/ Tool Calling - see R/tools.R R/register.R registration functions. Structured Outputs - see R/types.R R/chat.R’s extraction functions. API Integration - see R/gmaps.R R/hunter.R Google Maps Hunter.io integration. Configuration Management - see R/config.R configuration settings. Utilities Validation - see R/utils.R utility functions R/validation.R validation functions.","code":""},{"path":"http://docs.noclocks.dev/cspr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Charles Street Partners R Package","text":"can install development version cspr GitHub :","code":"# install.packages(\"pak\") pak::pak(\"noclocks/cspr\")"},{"path":"http://docs.noclocks.dev/cspr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Charles Street Partners R Package","text":"comprehensive look various tools, functions, structured outputs available package processing real-estate property owner company information, retrieving geocoded location data, analyzing property investment opportunities.","code":""},{"path":"http://docs.noclocks.dev/cspr/index.html","id":"setup","dir":"","previous_headings":"Usage","what":"Setup","title":"Charles Street Partners R Package","text":"Load original HUD Loans Data Select random property dataset Load original HUD Owners Data Select random owner dataset Initialize new chat/agent","code":"library(cspr)  # load HUD loans data data(\"hud_loans\")  # select a random property/row property <- dplyr::slice_sample(hud_loans, n = 1L)  # load owners data data(\"hud_owners\")  # select a random owner owner <- dplyr::slice_sample(hud_owners, n = 1L)  # initialize new chat/agent chat <- initialize_chat()"},{"path":"http://docs.noclocks.dev/cspr/index.html","id":"property-investment-analysis","dir":"","previous_headings":"Usage","what":"Property Investment Analysis","title":"Charles Street Partners R Package","text":"example perform property investment analysis selected property using included, custom structured outputs prompt templates specific initial property investment analysis task. [!NOTE] can view property investment opporitunity analysis evaluation prompt template : property_investment.prompt.md. results structured output analysis results derived score/recommendation: can see structured output, analysis results, evaluation score, recommendation, additional notes provided structured format easy interpretation action. can see original, traced chat response see agent reasoned processing data expanding details :","code":"# perform a property investment analysis on the property w/ structured outputs resp <- chat_extract_property_investment_analysis(chat, property)  # print the structured output to the console resp > resp $property_name [1] \"Huntington Gardens\"  $evaluation_score [1] 7.5  $recommendation [1] \"Given the competitive interest rate, stable financing, and potential for renovation-led growth in a desirable market, it would be prudent to explore further.\"  $proceed_with_email [1] TRUE  $analysis_results $analysis_results$loan_analysis [1] \"The loan amount is approximately $22.753 million with an interest rate of 3.1% fixed. This rate is quite favorable, given that it's a HUD-backed loan, which typically offers advantageous terms. The low-interest rate signifies cost-effective long-term financing.\"  $analysis_results$units_analysis [1] \"With 180 units, this property provides a significant potential for rental income. The scale of operations can be favorable for both current income and opportunities for renovation-led growth.\"  $analysis_results$location_analysis [1] \"The location rating of B in Orange County suggests it is in a moderately attractive area. This county is well-known for its desirability as a place to live, supporting tenant demand. The improvement rating of C indicates potential value-add opportunities if improvements enhance rental income or reduce operating expenses.\"  $analysis_results$timeline_analysis [1] \"The property was completed in 1980, making it over 40 years old, potentially requiring updates. Loan origination in 2012 and maturity in 2047 indicates a stable horizon, with the possibility of considering midpoint refinancing strategies.\"   $additional_notes [1] \"While there is uncertainty regarding immediate sale potential, the investment's stable financing and potential upsides warrant further investigation. Checking viability for necessary updates and verifying current market rents may create further clarity.\" To evaluate the Huntington Gardens property as a potential investment opportunity, let’s analyze the factors one by one:  1. **Loan Amount and Interest Rate Compared to Market Standards:**    - The loan amount is approximately $22.753 million with an interest rate of 3.1% fixed. This rate is quite favorable, given that it's a HUD-backed loan, which typically offers advantageous terms. The low-interest rate signifies cost-effective long-term financing.  2. **Number of Units:**    - With 180 units, this property provides a significant potential for rental income. The scale of operations can be favorable for both current income and opportunities for renovation-led growth, making it an attractive acquisition target.  3. **Property's Location and Improvement Ratings:**    - The location rating of B in Orange County suggests it is in a moderately attractive area. This county is well-known for its desirability as a place to live, which generally supports tenant demand.    - The improvement rating of C indicates there might be some need for updates, which could offer a potential upside if those improvements can enhance rental income or reduce operating expenses.  4. **Completion Timeline and Market Timing:**    - The property was completed in 1980, making it over 40 years old. This age may necessitate updating building systems or interiors, but it’s also a common scenario for multifamily investments.    - Loan origination in 2012 and maturity in 2047 offers a stable horizon, but it’s essential to consider mid-point refinancing or exit strategies due to the property's age.  5. **Property's Sale Price and Loan Origination/Maturity Dates:**    - With no current sale date or price provided, it’s unclear how the current value compares to historical investment. The long loan duration provides certainty in financing costs.  6. **Owner's Contact Information and Company Details:**    - Owned by LOMCO, with Stephen Doty as the contact person. The owner is likely seasoned in property management, which can mean the property is well-managed, but could also be an obstacle to negotiation if they are satisfied with current performance.  7. **Additional Notes on Loan Terms or Property Details:**    - Use of a HUD 223(f) loan provides confidence of lower risk due to federal backing. The fixed interest rate and long amortization period further enhance stability.  **Numerical Score (1-10):** 7.5/10    - The combination of stable financing, potential for improvement, and a decent location supports this score. The financial leverage with favorable terms is a significant plus.  **Recommendation:** Given the competitive interest rate, stable financing, and potential for renovation-led growth in a desirable market, it would be prudent to explore further. Tracking down the contact email for Stephen Doty or the company LOMCO would be beneficial to opening a dialogue regarding potential transactions or partnerships.  **Conclusion:** While there is uncertainty regarding immediate sale potential, the investment's stable financing and potential upsides warrant further investigation. Checking viability for necessary updates and verifying current market rents may create further clarity.  Shall I proceed with retrieving the email addresses for outreach to Stephen Doty or LOMCO?"},{"path":"http://docs.noclocks.dev/cspr/index.html","id":"google-maps-integrations","dir":"","previous_headings":"Usage","what":"Google Maps Integrations","title":"Charles Street Partners R Package","text":"can also use package interact Google Maps API geocoding addresses searching places via new Google Maps Places API custom tools registered chat-bot agent: Functions: gmaps_geocode_address(): Geocode address using Google Maps Geocoding API gmaps_places_search(): Search places using Google Maps Places API gmaps_find_best_match(): Find best match list places based input address gmaps_extract_place_info(): Extract place details Google Maps Places API response Tools: tool_gmaps_geocode_address(): Geocode address using Google Maps Geocoding API tool_gmaps_search_places(): Search places using Google Maps Places API Structured Output Type Definitions: type_gmaps_geocode_address(): Structured output type geocoding address type_gmaps_search_places(): Structured output type searching places","code":"# geocode the owner's address resp_geocode <- chat_extract_geocoded_address(chat, owner$owner_full_address)  # collect the place details associated with the owner's company # via the place details structured output resp_place_details <- chat_extract_place_details(chat, owner$owner_company, owner$owner_full_address)  # print the structured outputs to the console resp_geocode resp_place_details"},{"path":"http://docs.noclocks.dev/cspr/index.html","id":"hunterio-email-retrieval","dir":"","previous_headings":"Usage","what":"Hunter.io Email Retrieval","title":"Charles Street Partners R Package","text":"can also use package interact Hunter.io API retrieving email addresses associated domain person details via custom tool registered chat-bot agent: Functions: hunter_get_email_address() hunter_get_company_domain() hunter_parse_email_response() Tools: tool_hunter_get_email_address(): Retrieve email address associated owning company domain contact first/last name. Structured Output Type Definitions: type_hunter_email_address(): Structured output type retrieving email addresses continued…","code":"# get the domain from the google maps places results domain <- resp_place_details$domain  # get the email address for the domain and initial owner data resp_email <- chat_extract_hunter_email_address(chat, domain, owner$owner_first_name, owner$owner_last_name)  # print the structured output to the console resp_email"},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_geocoded_address.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Geocoded Address — chat_extract_geocoded_address","title":"Extract Geocoded Address — chat_extract_geocoded_address","text":"Extract geocoded address chat response.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_geocoded_address.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Geocoded Address — chat_extract_geocoded_address","text":"","code":"chat_extract_geocoded_address(chat, address)"},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_geocoded_address.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Geocoded Address — chat_extract_geocoded_address","text":"chat ellmer::chat object. address character string representing address geocode.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_geocoded_address.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Geocoded Address — chat_extract_geocoded_address","text":"list containing geocoded address information.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_hunter_email_address.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Hunter Email Address — chat_extract_hunter_email_address","title":"Extract Hunter Email Address — chat_extract_hunter_email_address","text":"Extract email address chat response using Hunter.io API.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_hunter_email_address.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Hunter Email Address — chat_extract_hunter_email_address","text":"","code":"chat_extract_hunter_email_address(   chat,   company_domain,   company_name,   first_name,   last_name )"},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_hunter_email_address.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Hunter Email Address — chat_extract_hunter_email_address","text":"chat ellmer::chat object. company_domain character string representing company domain. company_name character string representing company name. first_name character string representing first name person. last_name character string representing last name person.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_hunter_email_address.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Hunter Email Address — chat_extract_hunter_email_address","text":"list containing email address information.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_owner_company_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Owner Company Details — chat_extract_owner_company_details","title":"Extract Owner Company Details — chat_extract_owner_company_details","text":"Extract owner company details chat response.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_owner_company_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Owner Company Details — chat_extract_owner_company_details","text":"","code":"chat_extract_owner_company_details(   chat,   owner_company_name,   owner_company_address,   owner_first_name,   owner_last_name,   owner_phone = NULL )"},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_owner_company_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Owner Company Details — chat_extract_owner_company_details","text":"chat ellmer::chat object. owner_company_name character string representing name owner's company. owner_company_address character string representing address owner's company. owner_first_name character string representing first name owner. owner_last_name character string representing last name owner. owner_phone character string representing phone number owner.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_owner_company_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Owner Company Details — chat_extract_owner_company_details","text":"list containing owner company details information.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_place_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Place Details — chat_extract_place_details","title":"Extract Place Details — chat_extract_place_details","text":"Extract place details chat response.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_place_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Place Details — chat_extract_place_details","text":"","code":"chat_extract_place_details(   chat,   company_name,   company_address,   company_phone = NULL )"},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_place_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Place Details — chat_extract_place_details","text":"chat ellmer::chat object. company_name character string representing name company. company_address character string representing address company. company_phone character string representing phone number company.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_place_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Place Details — chat_extract_place_details","text":"list containing place details information.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_property_investment_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Property Investment Analysis Results — chat_extract_property_investment_analysis","title":"Extract Property Investment Analysis Results — chat_extract_property_investment_analysis","text":"Extract property investment analysis results chat response.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_property_investment_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Property Investment Analysis Results — chat_extract_property_investment_analysis","text":"","code":"chat_extract_property_investment_analysis(chat, property_row)"},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_property_investment_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Property Investment Analysis Results — chat_extract_property_investment_analysis","text":"chat ellmer::chat object. property_row single row HUD property dataset.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/chat_extract_property_investment_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Property Investment Analysis Results — chat_extract_property_investment_analysis","text":"list containing property investment analysis information.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Functions — checks","title":"Check Functions — checks","text":"collection functions checking validity function arguments. Functions: check_inherits(): Check object inherits class. check_installed(): Check package installed. check_chat(): Check object ellmer::Chat object. check_tool(): Check object ellmer::tool() object. check_row(): Check object single-row data frame.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Functions — checks","text":"","code":"check_inherits(   x,   class,   x_arg = rlang::caller_arg(x),   call = rlang::caller_env() )  check_installed(pkg, arg = rlang::caller_arg(pkg), call = rlang::caller_env())  check_chat(chat, arg = rlang::caller_arg(chat), call = rlang::caller_env())  check_tool(tool, arg = rlang::caller_arg(tool), call = rlang::caller_env())  check_row(row, arg = rlang::caller_arg(row), call = rlang::caller_env())"},{"path":"http://docs.noclocks.dev/cspr/reference/checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Functions — checks","text":"x object check. class character string representing class check . x_arg character string representing argument name. call environment representing calling environment. pkg character string representing package name. chat ellmer::Chat object. tool ellmer::tool() object. row single-row data frame.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/clean_address.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Address — clean_address","title":"Clean Address — clean_address","text":"Cleanse format address standardized manner removing unnecessary elements characters combining address, city, state, zip code components single string.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/clean_address.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Address — clean_address","text":"","code":"clean_address(address)"},{"path":"http://docs.noclocks.dev/cspr/reference/clean_address.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Address — clean_address","text":"address character string representing street address.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/clean_address.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Address — clean_address","text":"character string representing cleansed formatted address.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/clean_company_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Company Name — clean_company_name","title":"Clean Company Name — clean_company_name","text":"Cleanse format company name removing common suffixes non-alphanumeric characters, converting lowercase.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/clean_company_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Company Name — clean_company_name","text":"","code":"clean_company_name(company_name)"},{"path":"http://docs.noclocks.dev/cspr/reference/clean_company_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Company Name — clean_company_name","text":"company_name Character string representing company name cleaned.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/clean_company_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Company Name — clean_company_name","text":"character string representing cleansed formatted company name.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/clean_first_last_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean First and Last Name — clean_first_last_name","title":"Clean First and Last Name — clean_first_last_name","text":"Cleanse format first last name removing trailing initials.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/clean_first_last_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean First and Last Name — clean_first_last_name","text":"","code":"clean_first_last_name(first_name, last_name)"},{"path":"http://docs.noclocks.dev/cspr/reference/clean_first_last_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean First and Last Name — clean_first_last_name","text":"first_name Character string representing first name cleaned. last_name Character string representing last name cleaned.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/clean_first_last_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean First and Last Name — clean_first_last_name","text":"character string representing cleansed formatted full name.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/config.html","id":null,"dir":"Reference","previous_headings":"","what":"Configuration — config","title":"Configuration — config","text":"Functions managing configuration settings environment variables. Functions: get_openai_api_key(): Get OpenAI API key configuration file. set_openai_api_key(): Set OpenAI API key environment variable. get_gemini_api_key(): Get Gemini API key configuration file. set_gemini_api_key(): Set Gemini API key environment variable. get_gmaps_api_key(): Get Google Maps API key configuration file. set_gmaps_api_key(): Set Google Maps API key environment variable. get_hunterio_api_key(): Get Hunter.io API key configuration file. set_hunterio_api_key(): Set Hunter.io API key environment variable.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configuration — config","text":"","code":"get_openai_api_key()  set_openai_api_key(key)  get_gemini_api_key()  set_gemini_api_key(key)  get_gmaps_api_key()  set_gmaps_api_key(key)  get_hunterio_api_key()  set_hunterio_api_key(key)"},{"path":"http://docs.noclocks.dev/cspr/reference/config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configuration — config","text":"function returns respective API key sets environment variable.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/cspr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cspr: What the Package Does (One Line, Title Case) — cspr-package","title":"cspr: What the Package Does (One Line, Title Case) — cspr-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"http://docs.noclocks.dev/cspr/reference/cspr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cspr: What the Package Does (One Line, Title Case) — cspr-package","text":"Maintainer: Jimmy Briggs jimmy.briggs@jimbrig.com (ORCID) Authors: Patrick Howard patrick.howard@noclocks.dev [reviewer] contributors: Clocks, LLC team@noclocks.dev [copyright holder, funder]","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/email_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"Email Address and Domain Server Validation — email_validation","title":"Email Address and Domain Server Validation — email_validation","text":"Validate email addresses domain servers checking format regular expression patterns, MX DNS records, DNS records. Functions: validate_email_regex(): Validates format email address using regular expression. validate_email_mx(): Validates email address checking MX records falling back records necessary. validate_domain(): Validates domain checking MX records.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/email_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Email Address and Domain Server Validation — email_validation","text":"","code":"validate_email_regex(email)  validate_email_mx(email, timeout = 5)  validate_domain(domain)"},{"path":"http://docs.noclocks.dev/cspr/reference/email_validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Email Address and Domain Server Validation — email_validation","text":"email character string representing email address validate. timeout integer representing timeout seconds DNS queries. domain character string representing domain validate.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/email_validation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Email Address and Domain Server Validation — email_validation","text":"validate_email_regex(): Returns TRUE email address valid according regex pattern, otherwise FALSE. validate_email_mx(): Returns TRUE email address valid MX records records, otherwise FALSE. validate_domain(): Returns TRUE domain valid MX records, otherwise FALSE.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/email_validation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Email Address and Domain Server Validation — email_validation","text":"","code":"email <- \"jimmy.briggs@noclocks.dev\" validate_email_regex(email) #> [1] TRUE validate_email_mx(email) #> ! No valid MX records found for domain: noclocks.dev. Falling back to A record check. #> ✖ No valid A records found for domain: noclocks.dev. Email validation failed. #> [1] FALSE domain <- sub(\".*@\", \"\", email) validate_domain(domain) #> ✔ Domain: noclocks.dev has valid A and MX records. #> [1] TRUE"},{"path":"http://docs.noclocks.dev/cspr/reference/get_domain_from_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Domain from URL — get_domain_from_url","title":"Get Domain from URL — get_domain_from_url","text":"Extract domain URL string removing protocol sub-domains.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/get_domain_from_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Domain from URL — get_domain_from_url","text":"","code":"get_domain_from_url(url)"},{"path":"http://docs.noclocks.dev/cspr/reference/get_domain_from_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Domain from URL — get_domain_from_url","text":"url character string representing URL extract domain .","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/get_domain_from_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Domain from URL — get_domain_from_url","text":"character string representing domain extracted URL.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/get_full_address.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Full Address — get_full_address","title":"Get Full Address — get_full_address","text":"Combine address, city, state, zip code components single string.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/get_full_address.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Full Address — get_full_address","text":"","code":"get_full_address(address, city, state, zip)"},{"path":"http://docs.noclocks.dev/cspr/reference/get_full_address.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Full Address — get_full_address","text":"address character string representing street address. city character string representing city name. state character string representing state abbreviation. zip character string representing zip code.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/get_full_address.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Full Address — get_full_address","text":"character string representing full address.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/gmaps_extract_place_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Place Information — gmaps_extract_place_info","title":"Extract Place Information — gmaps_extract_place_info","text":"function extracts relevant information place object returned Google Maps Places API.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/gmaps_extract_place_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Place Information — gmaps_extract_place_info","text":"","code":"gmaps_extract_place_info(place)"},{"path":"http://docs.noclocks.dev/cspr/reference/gmaps_extract_place_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Place Information — gmaps_extract_place_info","text":"place list representing place object returned Google Maps Places API.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/gmaps_extract_place_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Place Information — gmaps_extract_place_info","text":"list containing following elements: display_name: display name place. formatted_address: formatted address place. phone: phone number place. business_status: business status place. business_primary_type: primary type business. business_types: vector business types associated place. latitude: latitude place. longitude: longitude place. maps_url: Google Maps URL place. place_id: unique identifier place. website: website URL place. domain: domain extracted website URL.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/gmaps_find_best_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the Best Match from Multiple Places — gmaps_find_best_match","title":"Determine the Best Match from Multiple Places — gmaps_find_best_match","text":"function takes list places returned Google Maps Places API compares find best match based various criteria.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/gmaps_find_best_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the Best Match from Multiple Places — gmaps_find_best_match","text":"","code":"gmaps_find_best_match(   places,   company_name,   company_address,   company_phone = NULL )"},{"path":"http://docs.noclocks.dev/cspr/reference/gmaps_find_best_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the Best Match from Multiple Places — gmaps_find_best_match","text":"places List places returned Google Maps Places API. company_name Character string representing name company. company_address Character string representing address company. company_phone Character string representing phone number company.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/gmaps_find_best_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the Best Match from Multiple Places — gmaps_find_best_match","text":"list containing following elements: display_name: display name place. formatted_address: formatted address place. phone: phone number place. business_status: business status place. business_primary_type: primary type business. business_types: vector business types associated place. latitude: latitude place. longitude: longitude place. maps_url: Google Maps URL place. place_id: unique identifier place. website: website URL place. domain: domain extracted website URL.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/gmaps_find_best_match.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine the Best Match from Multiple Places — gmaps_find_best_match","text":"function evaluates place based : Type place (e.g., real estate agency, property management company) String similarity company name String similarity address Phone number area code match Presence website Business status (operational ) function returns place highest score, indicating best match.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/gmaps_geocode_address.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocode Address — gmaps_geocode_address","title":"Geocode Address — gmaps_geocode_address","text":"Geocode address using Google Maps Geocoding API.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/gmaps_geocode_address.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocode Address — gmaps_geocode_address","text":"","code":"gmaps_geocode_address(address, api_key = get_gmaps_api_key())"},{"path":"http://docs.noclocks.dev/cspr/reference/gmaps_geocode_address.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocode Address — gmaps_geocode_address","text":"address character string representing address geocode. api_key character string representing Google Maps API key. default result get_gmaps_api_key().","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/gmaps_geocode_address.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocode Address — gmaps_geocode_address","text":"list containing following elements: status: character string indicating status API request. formatted_address: character string representing formatted address. place_id: character string representing place ID. place_types: character string representing place types. latitude: numeric value representing latitude. longitude: numeric value representing longitude.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/gmaps_places_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Maps Places Search — gmaps_places_search","title":"Google Maps Places Search — gmaps_places_search","text":"Search company using Google Maps Places API.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/gmaps_places_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Maps Places Search — gmaps_places_search","text":"","code":"gmaps_places_search(   company_name,   company_address,   company_phone = NULL,   api_key = get_gmaps_api_key() )"},{"path":"http://docs.noclocks.dev/cspr/reference/gmaps_places_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Maps Places Search — gmaps_places_search","text":"company_name Character string representing name company. company_address Character string representing address company. company_phone Character string representing phone number company. api_key character string representing Google Maps API key. Defaults result get_gmaps_api_key().","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/gmaps_places_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Maps Places Search — gmaps_places_search","text":"list containing following elements: website: character string representing website URL. domain: character string representing domain extracted website URL. display_name: character string representing display name place. formatted_address: character string representing formatted address place. phone: character string representing phone number place. business_status: character string representing business status place. business_type: character string representing business type place. latitude: numeric value representing latitude place. longitude: numeric value representing longitude place. maps_url: character string representing Google Maps URL place. place_id: character string representing place ID place.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/gmaps_places_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Maps Places Search — gmaps_places_search","text":"","code":"if (FALSE) { # \\dontrun{   gmaps_places_search(\"Google\", \"1600 Amphitheatre Parkway, Mountain View, CA\") } # }"},{"path":"http://docs.noclocks.dev/cspr/reference/hunter_get_company_domain.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Company Domain via Hunter.io — hunter_get_company_domain","title":"Get Company Domain via Hunter.io — hunter_get_company_domain","text":"function retrieves domain company based name using Hunter.io API.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/hunter_get_company_domain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Company Domain via Hunter.io — hunter_get_company_domain","text":"","code":"hunter_get_company_domain(company_name, api_key = get_hunterio_api_key())"},{"path":"http://docs.noclocks.dev/cspr/reference/hunter_get_company_domain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Company Domain via Hunter.io — hunter_get_company_domain","text":"company_name Character string representing name company. api_key Hunter.io API key. provided, uses get_hunterio_api_key() retrieve .","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/hunter_get_company_domain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Company Domain via Hunter.io — hunter_get_company_domain","text":"character string representing domain company. domain found, returns NA.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/hunter_get_email_address.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Email Address via Hunter.io — hunter_get_email_address","title":"Get Email Address via Hunter.io — hunter_get_email_address","text":"function retrieves email address based provided company domain, company name, person's first last name using Hunter.io API.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/hunter_get_email_address.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Email Address via Hunter.io — hunter_get_email_address","text":"","code":"hunter_get_email_address(   company_domain,   company_name,   first_name,   last_name,   api_key = get_hunterio_api_key() )"},{"path":"http://docs.noclocks.dev/cspr/reference/hunter_get_email_address.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Email Address via Hunter.io — hunter_get_email_address","text":"company_domain Character string representing company domain. company_name Character string representing company name. first_name Character string representing person's first name. last_name Character string representing person's last name. api_key Hunter.io API key. provided, uses get_hunterio_api_key() retrieve .","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/hunter_get_email_address.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Email Address via Hunter.io — hunter_get_email_address","text":"list containing following elements: first_name: first name person. last_name: last name person. email: retrieved email address. score: score email address. domain: company domain. company: company name. phone_number: phone number associated email address. verification_date: date email verification.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/hunter_parse_email_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Hunter.io Email Response — hunter_parse_email_response","title":"Parse Hunter.io Email Response — hunter_parse_email_response","text":"function parses JSON response Hunter.io API email discovery verification.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/hunter_parse_email_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Hunter.io Email Response — hunter_parse_email_response","text":"","code":"hunter_parse_email_response(resp_json)"},{"path":"http://docs.noclocks.dev/cspr/reference/hunter_parse_email_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Hunter.io Email Response — hunter_parse_email_response","text":"resp_json JSON response Hunter.io API.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/hunter_parse_email_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Hunter.io Email Response — hunter_parse_email_response","text":"list containing following elements: first_name: first name person. last_name: last name person. email: retrieved email address. score: score email address. domain: company domain. company: company name. phone_number: phone number associated email address. verification_date: date email verification.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/initialize_chat.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Chat — initialize_chat","title":"Initialize Chat — initialize_chat","text":"Initialize chat session OpenAI API using gpt-4o model (default) register necessary custom function calling tools performing property investent analysis, Google Maps API functions, Hunter.io API functions.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/initialize_chat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Chat — initialize_chat","text":"","code":"initialize_chat(   model = \"gpt-4o\",   system_prompt = prompt_default(),   api_key = get_openai_api_key(),   echo = c(\"none\", \"text\", \"all\") )"},{"path":"http://docs.noclocks.dev/cspr/reference/initialize_chat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize Chat — initialize_chat","text":"ellmer::chat object configured specified system prompt tools.","code":""},{"path":[]},{"path":"http://docs.noclocks.dev/cspr/reference/pkg_sys.html","id":null,"dir":"Reference","previous_headings":"","what":"Package System File — pkg_sys","title":"Package System File — pkg_sys","text":"Get path system file within package.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/pkg_sys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package System File — pkg_sys","text":"","code":"pkg_sys(...)"},{"path":"http://docs.noclocks.dev/cspr/reference/pkg_sys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Package System File — pkg_sys","text":"... Additional arguments passed system.file().","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/pkg_sys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Package System File — pkg_sys","text":"character string representing path system file.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/pkg_sys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Package System File — pkg_sys","text":"","code":"pkg_sys(\"config/config.yml\") #> [1] \"\""},{"path":"http://docs.noclocks.dev/cspr/reference/prompts.html","id":null,"dir":"Reference","previous_headings":"","what":"Prompts — prompts","title":"Prompts — prompts","text":"collection functions generating prompts chat agent. Functions: prompt_default_sys(): Generate default system prompt chat session. prompt_property_investment_user(): User prompt property investment analysis.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/prompts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prompts — prompts","text":"","code":"prompt_default_sys()  prompt_property_investment_user(property_row)"},{"path":"http://docs.noclocks.dev/cspr/reference/prompts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prompts — prompts","text":"property_row data frame representing property record. Must single row.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/prompts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prompts — prompts","text":"prompt_default_sys(): character string representing default system prompt. prompt_property_investment_user(): character string representing prompt property investment analysis.","code":""},{"path":[]},{"path":"http://docs.noclocks.dev/cspr/reference/register_tool.html","id":null,"dir":"Reference","previous_headings":"","what":"Tool Registration — register_tool","title":"Tool Registration — register_tool","text":"Register custom, function calling tools chat session. register_tool(): Register single tool. register_tools(): Register multiple tools.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/register_tool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool Registration — register_tool","text":"","code":"register_tool(chat, tool)  register_tools(chat, tools)"},{"path":"http://docs.noclocks.dev/cspr/reference/register_tool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool Registration — register_tool","text":"chat ellmer::chat_openai() object. tool ellmer::tool() object. tools list ellmer::tool() objects.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/register_tool.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tool Registration — register_tool","text":"functions used side-effects (registering tools chat session), invisibly return chat object.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/register_tool.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tool Registration — register_tool","text":"","code":"if (FALSE) { # \\dontrun{ chat <- initialize_chat() register_tool(chat, tool_gmaps_places_search()) register_tools(chat, list(tool_gmaps_geocode_address(), tool_hunter_get_email_address())) } # }"},{"path":"http://docs.noclocks.dev/cspr/reference/string_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate String Similarity — string_similarity","title":"Calculate String Similarity — string_similarity","text":"Calculate similarity two strings using Jaro-Winkler distance method.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/string_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate String Similarity — string_similarity","text":"","code":"string_similarity(string1, string2)"},{"path":"http://docs.noclocks.dev/cspr/reference/string_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate String Similarity — string_similarity","text":"string1 character string representing first string. string2 character string representing second string.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/string_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate String Similarity — string_similarity","text":"numeric value 0 1 representing similarity two strings.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/tools.html","id":null,"dir":"Reference","previous_headings":"","what":"Tools — tools","title":"Tools — tools","text":"Register various tools geocoding, address cleaning, domain extraction. Functions: tool_gmaps_places_search(): Search places using Google Maps Places API find website contact information. tool_gmaps_geocode_address(): Geocode address using Google Maps Geocoding API. tool_hunter_get_email_address(): Retrieve email address based provided company domain, company name, person's first last name using Hunter.io API.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/tools.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tools — tools","text":"","code":"tool_gmaps_places_search()  tool_gmaps_geocode_address()  tool_hunter_get_email_address()"},{"path":"http://docs.noclocks.dev/cspr/reference/tools.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tools — tools","text":"function returns ellmer::tool() definition object.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/types.html","id":null,"dir":"Reference","previous_headings":"","what":"Types — types","title":"Types — types","text":"Custom type definitions data structures used tools. Functions: type_gmaps_geocode_address(): Defines structure geocoded address data. type_gmaps_place_details(): Defines structure place details data. type_hunter_email_address(): Defines structure email address data. type_property_investment_analysis(): Defines structure property investment analysis data. type_hud_data(): Defines structure HUD property loans dataset. type_owner_contact(): Defines structure property owner contact information. type_email_draft(): Defines structure email draft.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Types — types","text":"","code":"type_gmaps_geocode_address()  type_gmaps_place_details()  type_hunter_email_address()  type_property_investment_analysis()  type_hud_data()  type_owner_contact()  type_email_draft()"},{"path":"http://docs.noclocks.dev/cspr/reference/types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Types — types","text":"function returns ellmer::type_object() definition object.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/validate_address.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Address Format — validate_address","title":"Validate Address Format — validate_address","text":"Validate format street address checking expected format street number name.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/validate_address.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Address Format — validate_address","text":"","code":"validate_address(address)"},{"path":"http://docs.noclocks.dev/cspr/reference/validate_address.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Address Format — validate_address","text":"address character string address string validate.","code":""},{"path":"http://docs.noclocks.dev/cspr/reference/validate_address.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Address Format — validate_address","text":"List two elements: valid (logical) address (character).","code":""}]
